-- The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

-- 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

-- Let us list the factors of the first seven triangle numbers:

--  1: 1
--  3: 1,3
--  6: 1,2,3,6
-- 10: 1,2,5,10
-- 15: 1,3,5,15
-- 21: 1,3,7,21
-- 28: 1,2,4,7,14,28
-- We can see that 28 is the first triangle number to have over five divisors.

-- What is the value of the first triangle number to have over five hundred divisors?

triangleNumbers = [div (n^2 - n) 2 | n <- [2..]]

getDivisors :: Int -> [Int]
getDivisors x = combine l1 $ reverse l2
    where factorPairs = [(m, n) | m <- [1..(ceiling $ sqrt $ fromIntegral x)], m^2 <= x, mod x m == 0, let n = div x m]
          (l1, l2) = unzip factorPairs
          combine xs l@(y:ys) | last xs == y = xs ++ ys
                              | otherwise    = xs ++ l

main = do
    print $ fst $ head $ dropWhile ((<= 500) . length . snd) $ zip triangleNumbers $ map getDivisors triangleNumbers